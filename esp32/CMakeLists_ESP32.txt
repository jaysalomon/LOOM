# ESP32 LOOM Kernel CMakeLists.txt
cmake_minimum_required(VERSION 3.16)

# Set the project name
project(loom_esp32_kernel C)

# Set C standard
set(CMAKE_C_STANDARD 11)
set(CMAKE_C_STANDARD_REQUIRED ON)

# ESP32-specific settings
set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR xtensa)

# Include directories
include_directories(
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}/src
)

# Source files
set(SOURCES
    src/loom_esp32_kernel.c
)

# Create static library
add_library(loom_esp32_kernel STATIC ${SOURCES})

# Include ESP-IDF components if available
if(DEFINED ENV{IDF_PATH})
    # ESP-IDF build system
    idf_component_register(
        SRCS ${SOURCES}
        INCLUDE_DIRS "."
        REQUIRES esp_common esp_timer
    )
else()
    # Standalone build (for testing)
    target_include_directories(loom_esp32_kernel PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})

    # Compiler flags for ESP32
    target_compile_options(loom_esp32_kernel PRIVATE
        -mlongcalls
        -Wno-frame-address
        -ffunction-sections
        -fdata-sections
        -Wall
        -Werror
        -O2
    )

    # Linker flags
    target_link_options(loom_esp32_kernel PRIVATE
        -Wl,--gc-sections
        -Wl,--undefined=uxTopUsedPriority
    )
endif()

# Build demo executable if not in ESP-IDF
if(NOT DEFINED ENV{IDF_PATH})
    add_executable(loom_demo
        examples/esp32_demo.c
    )

    target_link_libraries(loom_demo
        loom_esp32_kernel
        m  # math library
    )

    # Demo-specific compiler flags
    target_compile_options(loom_demo PRIVATE
        -g
        -O0
    )
endif()